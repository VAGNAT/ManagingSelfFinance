<table id="dtBasicExample" class="table table-striped table-bordered" cellspacing="0" width="100%">
    <thead>
        <tr>
            <th class="th-sm" style="width:100px"></th>
            <th class="th-sm">&#35;</th>            
            <th class="th-sm">Name</th>            
        </tr>
    </thead>
    <tbody>
        @foreach (TypeExpense item in TypeExpenses)
        {
            <tr>
                <td>
                    <div class="btn-group text-center" role="group">
                        <a class="btn btn-outline-primary" @onclick="(() => ShowEdit.InvokeAsync(item))"><i class="oi oi-pencil"></i></a>
                        <button type="button" class="btn btn-outline-danger" @onclick="(() => OnDelete.InvokeAsync(item))">
                            <i class="oi oi-trash"></i>
                        </button>
                    </div>
                </td>
                <td>@count</td>
                <td>@item.Name</td>                
            </tr>
            count++;
        }
    </tbody>
</table>

@code {
    [Parameter] public IEnumerable<TypeExpense> TypeExpenses { get; set; }
    [Parameter] public EventCallback<TypeExpense> ShowEdit { get; set; }
    [Parameter] public EventCallback<TypeExpense> OnDelete { get; set; }
    private int count;

    protected override void OnParametersSet()
    {
        count = 1;
    }       
}
